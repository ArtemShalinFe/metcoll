// Code generated by MockGen. DO NOT EDIT.
// Source: cmd/agent/main.go

// Package mock_main is a generated GoMock package.
package mock_main

import (
	context "context"
	reflect "reflect"

	metrics "github.com/ArtemShalinFe/metcoll/internal/metrics"
	gomock "github.com/golang/mock/gomock"
)

// MockmetcollClient is a mock of metcollClient interface.
type MockmetcollClient struct {
	ctrl     *gomock.Controller
	recorder *MockmetcollClientMockRecorder
}

// MockmetcollClientMockRecorder is the mock recorder for MockmetcollClient.
type MockmetcollClientMockRecorder struct {
	mock *MockmetcollClient
}

// NewMockmetcollClient creates a new mock instance.
func NewMockmetcollClient(ctrl *gomock.Controller) *MockmetcollClient {
	mock := &MockmetcollClient{ctrl: ctrl}
	mock.recorder = &MockmetcollClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockmetcollClient) EXPECT() *MockmetcollClientMockRecorder {
	return m.recorder
}

// BatchUpdate mocks base method.
func (m *MockmetcollClient) BatchUpdate(ctx context.Context, ms []*metrics.Metrics) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchUpdate", ctx, ms)
	ret0, _ := ret[0].(error)
	return ret0
}

// BatchUpdate indicates an expected call of BatchUpdate.
func (mr *MockmetcollClientMockRecorder) BatchUpdate(ctx, ms interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchUpdate", reflect.TypeOf((*MockmetcollClient)(nil).BatchUpdate), ctx, ms)
}
