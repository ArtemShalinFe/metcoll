// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: metcoll.proto

package metcoll

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Metric_MetricType int32

const (
	Metric_UNKNOWN Metric_MetricType = 0 // for backward compatibility
	Metric_COUNTER Metric_MetricType = 1
	Metric_GAUGE   Metric_MetricType = 2
)

// Enum value maps for Metric_MetricType.
var (
	Metric_MetricType_name = map[int32]string{
		0: "UNKNOWN",
		1: "COUNTER",
		2: "GAUGE",
	}
	Metric_MetricType_value = map[string]int32{
		"UNKNOWN": 0,
		"COUNTER": 1,
		"GAUGE":   2,
	}
)

func (x Metric_MetricType) Enum() *Metric_MetricType {
	p := new(Metric_MetricType)
	*p = x
	return p
}

func (x Metric_MetricType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Metric_MetricType) Descriptor() protoreflect.EnumDescriptor {
	return file_metcoll_proto_enumTypes[0].Descriptor()
}

func (Metric_MetricType) Type() protoreflect.EnumType {
	return &file_metcoll_proto_enumTypes[0]
}

func (x Metric_MetricType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Metric_MetricType.Descriptor instead.
func (Metric_MetricType) EnumDescriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{0, 0}
}

// Metric - an indicator that reflects a particular characteristic.
type Metric struct {
	state         protoimpl.MessageState
	Id            string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	Delta         int64   `protobuf:"varint,3,opt,name=delta,proto3" json:"delta,omitempty"`
	Value         float64 `protobuf:"fixed64,4,opt,name=value,proto3" json:"value,omitempty"`
	sizeCache     protoimpl.SizeCache
	Type          Metric_MetricType `protobuf:"varint,2,opt,name=type,proto3,enum=metcoll.Metric_MetricType" json:"type,omitempty"`
}

func (x *Metric) Reset() {
	*x = Metric{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metcoll_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metric) ProtoMessage() {}

func (x *Metric) ProtoReflect() protoreflect.Message {
	mi := &file_metcoll_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metric.ProtoReflect.Descriptor instead.
func (*Metric) Descriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{0}
}

func (x *Metric) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Metric) GetType() Metric_MetricType {
	if x != nil {
		return x.Type
	}
	return Metric_UNKNOWN
}

func (x *Metric) GetDelta() int64 {
	if x != nil {
		return x.Delta
	}
	return 0
}

func (x *Metric) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

// UpdateRequest - a request that updates a single metric value.
type UpdateRequest struct {
	state         protoimpl.MessageState
	Metric        *Metric `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metcoll_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metcoll_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateRequest) GetMetric() *Metric {
	if x != nil {
		return x.Metric
	}
	return nil
}

// UpdateResponse - a response to an update of a single metric value that returns the updated metric value.
type UpdateResponse struct {
	state         protoimpl.MessageState
	Metric        *Metric `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Error         string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metcoll_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metcoll_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateResponse) GetMetric() *Metric {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (x *UpdateResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// BatchUpdateRequest - a request that updates a package of metric values.
type BatchUpdateRequest struct {
	state         protoimpl.MessageState
	unknownFields protoimpl.UnknownFields
	Metrics       []*Metric `protobuf:"bytes,1,rep,name=metrics,proto3" json:"metrics,omitempty"`
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateRequest) Reset() {
	*x = BatchUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metcoll_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateRequest) ProtoMessage() {}

func (x *BatchUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metcoll_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateRequest.ProtoReflect.Descriptor instead.
func (*BatchUpdateRequest) Descriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{3}
}

func (x *BatchUpdateRequest) GetMetrics() []*Metric {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// BatchUpdateResponse - a response to the update of metric package.
type BatchUpdateResponse struct {
	state         protoimpl.MessageState
	Error         string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchUpdateResponse) Reset() {
	*x = BatchUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metcoll_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchUpdateResponse) ProtoMessage() {}

func (x *BatchUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metcoll_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchUpdateResponse.ProtoReflect.Descriptor instead.
func (*BatchUpdateResponse) Descriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{4}
}

func (x *BatchUpdateResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// ReadMetricRequest - a request that reads a single metric value.
type ReadMetricRequest struct {
	state         protoimpl.MessageState
	Metric        *Metric `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadMetricRequest) Reset() {
	*x = ReadMetricRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metcoll_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMetricRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMetricRequest) ProtoMessage() {}

func (x *ReadMetricRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metcoll_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMetricRequest.ProtoReflect.Descriptor instead.
func (*ReadMetricRequest) Descriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{5}
}

func (x *ReadMetricRequest) GetMetric() *Metric {
	if x != nil {
		return x.Metric
	}
	return nil
}

// ReadMetricResponse - a response that returns the metric value.
type ReadMetricResponse struct {
	state         protoimpl.MessageState
	Metric        *Metric `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"`
	Error         string  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadMetricResponse) Reset() {
	*x = ReadMetricResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metcoll_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadMetricResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMetricResponse) ProtoMessage() {}

func (x *ReadMetricResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metcoll_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMetricResponse.ProtoReflect.Descriptor instead.
func (*ReadMetricResponse) Descriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{6}
}

func (x *ReadMetricResponse) GetMetric() *Metric {
	if x != nil {
		return x.Metric
	}
	return nil
}

func (x *ReadMetricResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// ReadMetricRequest - a request that reads a package of metric values.
type MetricListRequest struct {
	state         protoimpl.MessageState
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricListRequest) Reset() {
	*x = MetricListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metcoll_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricListRequest) ProtoMessage() {}

func (x *MetricListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_metcoll_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricListRequest.ProtoReflect.Descriptor instead.
func (*MetricListRequest) Descriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{7}
}

// MetricListResponse - a response that returns the html page with metrics.
type MetricListResponse struct {
	state         protoimpl.MessageState
	Htmlpage      string `protobuf:"bytes,1,opt,name=htmlpage,proto3" json:"htmlpage,omitempty"`
	Error         string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricListResponse) Reset() {
	*x = MetricListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_metcoll_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetricListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricListResponse) ProtoMessage() {}

func (x *MetricListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_metcoll_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricListResponse.ProtoReflect.Descriptor instead.
func (*MetricListResponse) Descriptor() ([]byte, []int) {
	return file_metcoll_proto_rawDescGZIP(), []int{8}
}

func (x *MetricListResponse) GetHtmlpage() string {
	if x != nil {
		return x.Htmlpage
	}
	return ""
}

func (x *MetricListResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_metcoll_proto protoreflect.FileDescriptor

var file_metcoll_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x06, 0x4d, 0x65, 0x74,
	0x72, 0x69, 0x63, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x31, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x41, 0x55, 0x47, 0x45,
	0x10, 0x02, 0x22, 0x38, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x4d, 0x65,
	0x74, 0x72, 0x69, 0x63, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0x4f, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52,
	0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3f, 0x0a,
	0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x4d,
	0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x07, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x73, 0x22, 0x2b,
	0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3c, 0x0a, 0x11, 0x52,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x27, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x22, 0x53, 0x0a, 0x12, 0x52, 0x65, 0x61,
	0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x13,
	0x0a, 0x11, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x12, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x74, 0x6d,
	0x6c, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x74, 0x6d,
	0x6c, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x98, 0x02, 0x0a, 0x07,
	0x4d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x12, 0x45, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e,
	0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x72,
	0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0a, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x12, 0x1a, 0x2e, 0x6d,
	0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f,
	0x6c, 0x6c, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x1b, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e,
	0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x72, 0x74, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x6c, 0x69, 0x6e,
	0x46, 0x65, 0x2f, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x2f, 0x6d, 0x65, 0x74, 0x63, 0x6f, 0x6c, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_metcoll_proto_rawDescOnce sync.Once
	file_metcoll_proto_rawDescData = file_metcoll_proto_rawDesc
)

func file_metcoll_proto_rawDescGZIP() []byte {
	file_metcoll_proto_rawDescOnce.Do(func() {
		file_metcoll_proto_rawDescData = protoimpl.X.CompressGZIP(file_metcoll_proto_rawDescData)
	})
	return file_metcoll_proto_rawDescData
}

var file_metcoll_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_metcoll_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_metcoll_proto_goTypes = []interface{}{
	(Metric_MetricType)(0),      // 0: metcoll.Metric.MetricType
	(*Metric)(nil),              // 1: metcoll.Metric
	(*UpdateRequest)(nil),       // 2: metcoll.UpdateRequest
	(*UpdateResponse)(nil),      // 3: metcoll.UpdateResponse
	(*BatchUpdateRequest)(nil),  // 4: metcoll.BatchUpdateRequest
	(*BatchUpdateResponse)(nil), // 5: metcoll.BatchUpdateResponse
	(*ReadMetricRequest)(nil),   // 6: metcoll.ReadMetricRequest
	(*ReadMetricResponse)(nil),  // 7: metcoll.ReadMetricResponse
	(*MetricListRequest)(nil),   // 8: metcoll.MetricListRequest
	(*MetricListResponse)(nil),  // 9: metcoll.MetricListResponse
}
var file_metcoll_proto_depIdxs = []int32{
	0,  // 0: metcoll.Metric.type:type_name -> metcoll.Metric.MetricType
	1,  // 1: metcoll.UpdateRequest.metric:type_name -> metcoll.Metric
	1,  // 2: metcoll.UpdateResponse.metric:type_name -> metcoll.Metric
	1,  // 3: metcoll.BatchUpdateRequest.metrics:type_name -> metcoll.Metric
	1,  // 4: metcoll.ReadMetricRequest.metric:type_name -> metcoll.Metric
	1,  // 5: metcoll.ReadMetricResponse.metric:type_name -> metcoll.Metric
	8,  // 6: metcoll.Metcoll.MetricList:input_type -> metcoll.MetricListRequest
	6,  // 7: metcoll.Metcoll.ReadMetric:input_type -> metcoll.ReadMetricRequest
	4,  // 8: metcoll.Metcoll.Updates:input_type -> metcoll.BatchUpdateRequest
	2,  // 9: metcoll.Metcoll.Update:input_type -> metcoll.UpdateRequest
	9,  // 10: metcoll.Metcoll.MetricList:output_type -> metcoll.MetricListResponse
	7,  // 11: metcoll.Metcoll.ReadMetric:output_type -> metcoll.ReadMetricResponse
	5,  // 12: metcoll.Metcoll.Updates:output_type -> metcoll.BatchUpdateResponse
	3,  // 13: metcoll.Metcoll.Update:output_type -> metcoll.UpdateResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_metcoll_proto_init() }
func file_metcoll_proto_init() {
	if File_metcoll_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_metcoll_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metric); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metcoll_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metcoll_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metcoll_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metcoll_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metcoll_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMetricRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metcoll_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadMetricResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metcoll_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_metcoll_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetricListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_metcoll_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_metcoll_proto_goTypes,
		DependencyIndexes: file_metcoll_proto_depIdxs,
		EnumInfos:         file_metcoll_proto_enumTypes,
		MessageInfos:      file_metcoll_proto_msgTypes,
	}.Build()
	File_metcoll_proto = out.File
	file_metcoll_proto_rawDesc = nil
	file_metcoll_proto_goTypes = nil
	file_metcoll_proto_depIdxs = nil
}
